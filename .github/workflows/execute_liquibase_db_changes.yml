name: Execute Liquibase DB Changes

on:
  workflow_call:
    inputs:
      region:
        required: true
        type: string
      environment:
        required: true
        type: string

jobs:
  liquibase:
    name: Execute Liquibase DB Changes
    runs-on: [self-hosted, '${{ inputs.environment }}']
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Libraries
        run: |
          if [ ! -f ./liquibase/liquibase ]
          then
            echo "Downloading liquibase..."
            curl -L https://github.com/liquibase/liquibase/releases/download/v4.21.1/liquibase-4.21.1.zip --output liquibase.zip
            unzip -o -d liquibase liquibase.zip
            rm -f liquibase.zip
          fi
      - name: Run Liquibase
        env:
          AWS_REGION: ${{ inputs.region }}
        run: |
          PROPERTIES_PATH=liquibase.properties

          DB_SECRET_FULL_ARN=$(aws secretsmanager list-secrets --region $AWS_REGION --filter Key="tag-key",Values="aws:cloudformation:stack-name" Key="tag-value",Values="OmcareCloudDB" | jq -r '.SecretList[0].ARN')
          DB_SECRET_VALUE=$(aws secretsmanager get-secret-value --region $AWS_REGION --secret-id $DB_SECRET_FULL_ARN | jq -r '.SecretString')
          PG_HOST=$(echo $DB_SECRET_VALUE | jq -r '.host')
          PG_PASSWORD=$(echo $DB_SECRET_VALUE | jq -r '.password')

          sed -e "s|%PG_HOST|$PG_HOST|g" $PROPERTIES_PATH >> "$PROPERTIES_PATH.temp"
          cp "$PROPERTIES_PATH.temp" $PROPERTIES_PATH
          rm "$PROPERTIES_PATH.temp"

          sed -e "s|%PG_PASSWORD|$PG_PASSWORD|g" $PROPERTIES_PATH >> "$PROPERTIES_PATH.temp"
          cp "$PROPERTIES_PATH.temp" $PROPERTIES_PATH
          rm "$PROPERTIES_PATH.temp"
          
          ./liquibase/liquibase status --defaultsFile=liquibase.properties
          ./liquibase/liquibase update --defaultsFile=liquibase.properties


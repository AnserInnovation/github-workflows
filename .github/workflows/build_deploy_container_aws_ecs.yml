name: Build and Deploy Container AWS ECS

on:
  workflow_call:
    inputs:
      gcp_project_id:
        required: true
        type: string
      github_sha:
        required: true
        type: string
      region:
        required: true
        type: string
      account:
        required: true
        type: string
      oidc_role:
        required: true
        type: string
      app_name:
        required: true
        type: string
      environment:
        required: true
        type: string
      service:
        required: true
        type: string
    secrets:
      BUILD_SERVER_SSH_KEY:
        required: true
      GCP_CREDENTIALS_JSON:
        required: true

jobs:
  build_publish_deploy:
    name: Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: webfactory/ssh-agent@v0.5.2 # Add ssh-agent
        with:
          ssh-private-key: |
            ${{ secrets.BUILD_SERVER_SSH_KEY }}

      # Setup gcloud CLI
      - name: Get GCP secrets
        id: "auth"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS_JSON }}"
          export_environment_variables: true

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v0"

      - name: "Use gcloud CLI"
        run: "gcloud info"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ inputs.oidc_role }}
          aws-region: ${{ inputs.region }}

      - name: Install AWS Copilot CLI
        uses: ksivamuthu/aws-copilot-github-action@v0.0.1
        with:
          command: install

      # Build the Docker image
      - id: docker
        name: Build and push docker image
        env:
          PROJECT_ID: ${{ inputs.gcp_project_id }}
          GITHUB_SHA: ${{ inputs.github_sha }}
          REGION: ${{ inputs.region }}
          ACCOUNT: ${{ inputs.account }}
          APP_NAME: ${{ inputs.app_name }}
          SERVICE: ${{ inputs.service }}
          ENVIRONMENT: ${{ inputs.environment }}
        run: |
          aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $ACCOUNT.dkr.ecr.$REGION.amazonaws.com
          
          gcloud auth application-default print-access-token > auth.txt
          DOCKER_BUILDKIT=1 docker build --build-arg GCP_PROJECT_ID=$PROJECT_ID --build-arg ENVIRONMENT=$ENVIRONMENT --secret id=auth,src=auth.txt -t $SERVICE --ssh default .

          docker tag $SERVICE $ACCOUNT.dkr.ecr.$REGION.amazonaws.com/$APP_NAME/$SERVICE:latest
          docker tag $SERVICE $ACCOUNT.dkr.ecr.$REGION.amazonaws.com/$APP_NAME/$SERVICE:$GITHUB_SHA
          
          docker push $ACCOUNT.dkr.ecr.$REGION.amazonaws.com/$APP_NAME/$SERVICE:latest
          docker push $ACCOUNT.dkr.ecr.$REGION.amazonaws.com/$APP_NAME/$SERVICE:$GITHUB_SHA

          copilot svc deploy --app $APP_NAME --name $SERVICE --env $ENVIRONMENT --force


name: Reusable workflow example

on:
  workflow_call:
    inputs:
      gcp_project_id:
        required: true
        type: string
      image_tag:
        required: true
        type: string
      image_name:
        required: true
        type: string
      gce_instance:
        required: true
        type: string
      gce_instance_zone:
        required: true
        type: string
      github_sha:
        required: true
        type: string
    secrets:
      BUILD_SERVER_SSH_KEY:
        required: true

jobs:
  example_job:
    name: Pass input and secrets to my-action
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: webfactory/ssh-agent@v0.5.2 # Add ssh-agent
        with:
          ssh-private-key: |
            ${{ secrets.BUILD_SERVER_SSH_KEY }}

      # Setup gcloud CLI
      - name: Get GCP secrets
        id: "auth"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS_JSON }}"
          export_environment_variables: true

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v0"

      - name: "Use gcloud CLI"
        run: "gcloud info"

      # Build the Docker image
      - id: docker
        name: Build and push docker image
        env:
          PROJECT_ID: ${{ inputs.gcp_project_id }}
          IMAGE_TAG: ${{ inputs.image_tag }}
          IMAGE_NAME: ${{ inputs.image_name }}
          GITHUB_SHA: ${{ inputs.github_sha }}
        run: |
          gcloud auth configure-docker
          gcloud auth application-default print-access-token > auth.txt
          DOCKER_BUILDKIT=1 docker build --build-arg GCP_PROJECT_ID=$PROJECT_ID --secret id=auth,src=auth.txt -t $IMAGE_TAG --ssh default .

          docker tag $IMAGE_TAG gcr.io/$PROJECT_ID/$IMAGE_NAME:$IMAGE_TAG-$GITHUB_SHA
          docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:$IMAGE_TAG-$GITHUB_SHA
          echo "::set-output name=image::gcr.io/$PROJECT_ID/$IMAGE_NAME:$IMAGE_TAG-$GITHUB_SHA"

      # - id: "deploy"
      #   uses: "google-github-actions/deploy-cloudrun@v0"
      #   with:
      #     service: "omcare"
      #     image: ${{ steps.docker.outputs.image }}

      - name: Deploy
        env:
          GCE_INSTANCE: ${{ inputs.gce_instanace }}
          GCE_INSTANCE_ZONE: ${{ inputs.gce_instance_zone }}
        run: |-
          gcloud compute instances update-container "$GCE_INSTANCE" \
            --zone "$GCE_INSTANCE_ZONE" \
            --container-image ${{ steps.docker.outputs.image }}
